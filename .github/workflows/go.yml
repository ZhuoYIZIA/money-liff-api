name: Go

on:
  push:
    branches: [ "develop" ]

env:
  PROJECT_NAME: money-liff-api

jobs:

  tests:
    name: Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Test
        run: go test -cover -v ./...

  build:
    name: Build Docker Image
    needs: [ tests ]
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    outputs:
      RELEASE_VERSION: ${{ steps.GET_RELEASE_VERSION_STEP.outputs.value }}

    steps:
    - uses: actions/checkout@v3

    - name: Set version into environment variable
      run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

    - id: GET_RELEASE_VERSION_STEP
      run: echo "::set-output name=value::$RELEASE_VERSION"

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Make env file
      uses: SpicyPizza/create-envfile@v1.3
      with:
        envkey_DEBUG: false
        envkey_APP_ENV: ${{ github.ref_name }}
        envkey_DB_HOST: ${{ secrets.DB_HOST }}
        envkey_DB_PORT: ${{ secrets.DB_PORT }}
        envkey_DB_DATABASE: ${{ secrets.DB_DATABASE }}
        envkey_DB_USERNAME: ${{ secrets.DB_USERNAME }}
        envkey_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        file_name: .env
        fail_on_empty: false

    - name: Set Artifact Registry config
      run: sudo gcloud auth configure-docker ${{ secrets.GCP_ARTIFACT_REGION }}-docker.pkg.dev

    - id: 'auth'
      name: 'Authenticate to Google Cloud'
      uses: 'google-github-actions/auth@v0'
      with:
        credentials_json: ${{ secrets.GCP_CREDENTIALS }}
        token_format: 'access_token'

    - uses: 'docker/login-action@v1'
      with:
        registry: ${{ secrets.GCP_ARTIFACT_REGION }}-docker.pkg.dev
        username: 'oauth2accesstoken'
        password: '${{ steps.auth.outputs.access_token }}'

    - name: Build image
      run: |
        docker build -t $PROJECT_NAME:$RELEASE_VERSION .

    - name: Push image
      run: |
        docker tag $PROJECT_NAME:$RELEASE_VERSION ${{ secrets.GCP_ARTIFACT_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REGISTRY_NAME }}/$PROJECT_NAME:$RELEASE_VERSION
        docker push ${{ secrets.GCP_ARTIFACT_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REGISTRY_NAME }}/$PROJECT_NAME:$RELEASE_VERSION


#  migrate:
#    name: DB migration
#    needs: [ build ]
#    runs-on: ubuntu-latest
#    environment: ${{ github.ref_name }}
#    env:
#      MIGRATE_DSN: postgres://${{ secrets.DB_USERNAME }}:${{ secrets.DB_PASSWORD }}@127.0.0.1:${{ secrets.DB_PORT }}/${{ secrets.DB_DATABASE }}?sslmode=disable
#    steps:
#      - uses: actions/checkout@v3
#
#      - id: 'auth'
#        name: 'Authenticate to Google Cloud'
#        uses: 'google-github-actions/auth@v0'
#        with:
#          credentials_json: '${{ secrets.GCP_CREDENTIALS }}'
#
#      - name: Install cloud sql proxy
#        run: |
#          wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
#          chmod +x cloud_sql_proxy
#
#      - name: Install golang-migrate cli
#        run: |
#          sudo curl -L https://packagecloud.io/golang-migrate/migrate/gpgkey | sudo apt-key add -
#          sudo su -c "echo 'deb https://packagecloud.io/golang-migrate/migrate/ubuntu/ $(lsb_release -sc) main' > /etc/apt/sources.list.d/migrate.list"
#          sudo apt-get update
#          sudo apt-get install -y migrate
#
#      - name: Create Cloud sql proxy connection
#        run: |
#          ./cloud_sql_proxy -instances=${{ secrets.GCP_CLOUD_SQL_DB_INSTANCES }}=tcp:${{ secrets.DB_PORT }} &
#
#      - name: Run migrations
#        run: |
#          migrate -source github://tony-zhuo/money-liff-api/migrations#${{ github.ref_name }} -database $MIGRATE_DSN up

  deploy:
    name: Deploy image to cloud run
    needs: [ build ]
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
      - uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GCP_CREDENTIALS }}
          token_format: 'access_token'

      - uses: 'docker/login-action@v1'
        with:
          registry: ${{ secrets.GCP_ARTIFACT_REGION }}-docker.pkg.dev
          username: 'oauth2accesstoken'
          password: '${{ steps.auth.outputs.access_token }}'

      - id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v0'
        with:
          service: 'money-liff-api'
          image: ${{ secrets.GCP_ARTIFACT_REGION }}-docker.pkg.dev/${{ secrets.GCP_PROJECT_ID }}/${{ secrets.GCP_ARTIFACT_REGISTRY_NAME }}/money-liff-api:${{ needs.build.outputs.RELEASE_VERSION }}
          flags: "--allow-unauthenticated --vpc-connector money-liff-conn --add-cloudsql-instances ${{ secrets.GCP_CLOUD_SQL_DB_INSTANCES }}"

      - name: 'Use output'
        run: 'curl "${{ steps.deploy.outputs.url }}"'
