name: Go

on:
  push:
    branches: [ "develop" ]

env:
  PROJECT_NAME: money-liff
  RELEASE_VERSION: ${{ github.ref_name }}

jobs:

  tests:
    name: Testing
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v3
        with:
          go-version: 1.18

      - name: Test
        run: go test -cover -v ./...

  build-image:
    name: Build Docker Image
    needs: [ tests ]
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    steps:
    - uses: actions/checkout@v3

    - name: Set up Go
      uses: actions/setup-go@v3
      with:
        go-version: 1.18

    - name: Make env file
      uses: SpicyPizza/create-envfile@v1.3
      with:
        envkey_DEBUG: false
        envkey_APP_ENV: ${{ github.ref_name }}
        envkey_DB_HOST: ${{ secrets.DB_HOST }}
        envkey_DB_PORT: ${{ secrets.DB_PORT }}
        envkey_DB_DATABASE: ${{ secrets.DB_DATABASE }}
        envkey_DB_USERNAME: ${{ secrets.DB_USERNAME }}
        envkey_DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
        file_name: .env
        fail_on_empty: false

    - name: Build image
      run: docker build -t tonyzhuo/$PROJECT_NAME:$RELEASE_VERSION .

    - name: Save docker image as tar file
      run: docker save tonyzhuo/$PROJECT_NAME:$RELEASE_VERSION > liff.tar

    - name: Upload tar file to github artifact
      uses: actions/upload-artifact@v3
      with:
        name: backend-artifact
        path: liff.tar

  push-image-to-docker-hub:
    name: Push image to docker hub
    needs: [ build-image ]
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    steps:
      - name: Download image artifact
        uses: actions/download-artifact@v3
        with:
          name: backend-artifact

      - name: Load out docker image
        run: docker load < liff.tar

      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Push docker image to Docker Hub
        run: docker push tonyzhuo/$PROJECT_NAME:$RELEASE_VERSION

  migrate:
    name: DB migration
    needs: [ push-image-to-docker-hub ]
    runs-on: ubuntu-latest
    environment: ${{ github.ref_name }}
    env:
      MIGRATE_DSN: postgres://${{ secrets.DB_USERNAME }}:${{ secrets.DB_PASSWORD }}@127.0.0.1:${{ secrets.DB_PORT }}/${{ secrets.DB_DATABASE }}?sslmode=disable
    steps:
      - uses: actions/checkout@v3

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CLOUD_SQL_CREDENTIALS }}'

      - name: Install cloud sql proxy
        run: |
          wget https://dl.google.com/cloudsql/cloud_sql_proxy.linux.amd64 -O cloud_sql_proxy
          chmod +x cloud_sql_proxy

      - name: Install golang-migrate cli
        run: |
          sudo curl -L https://packagecloud.io/golang-migrate/migrate/gpgkey | sudo apt-key add -
          sudo su -c "echo 'deb https://packagecloud.io/golang-migrate/migrate/ubuntu/ $(lsb_release -sc) main' > /etc/apt/sources.list.d/migrate.list"
          sudo apt-get update
          sudo apt-get install -y migrate

      - name: Create Cloud sql proxy connection
        run: |
          ./cloud_sql_proxy -instances=${{ secrets.GCP_CLOUD_SQL_DB_INSTANCES }}=tcp:${{ secrets.DB_PORT }} &

      - name: Run migrations
        run: |
          migrate -source github://tony-zhuo/money-liff-api/migrations#${{ github.ref_name }} -database $MIGRATE_DSN up

  deploy:
    name: Deploy image to cloud run
    needs: [ push-image-to-docker-hub ]
    environment: ${{ github.ref_name }}
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GCP_CLOUD_RUN_CREDENTIALS }}'

      - id: 'deploy'
        uses: 'google-github-actions/deploy-cloudrun@v0'
        with:
          service: 'money-liff-api'
          image: 'tonyzhuo/$PROJECT_NAME:$RELEASE_VERSION'

      - name: 'Use output'
        run: 'curl "${{ steps.deploy.outputs.url }}"'